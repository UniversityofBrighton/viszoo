{"version":3,"sources":["FamilySelector.tsx","index.tsx"],"names":["FamilySelector","state","familias","props","args","render","familias_disp","map","fam","index","style","height","width","borderRadius","backgroundColor","display","cursor","onClick","onClicked","paddingLeft","theme","primaryColor","themeBackgroundColor","secondaryBackgroundColor","styleButton","paddingTop","flex","margin","padding","overflowY","flexDirection","borderTopLeftRadius","marginRight","onSelect","fontSize","textAlign","borderTopRightRadius","marginLeft","borderBottomRightRadius","borderBottomLeftRadius","marginTop","onFilter","setState","forceUpdate","Streamlit","setComponentValue","bool","forEach","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"sRAWMA,E,4MAEGC,MAAQ,CAACC,SAAU,EAAKC,MAAMC,KAAX,U,EAEnBC,OAAS,WAId,IAAMH,EAAW,EAAKD,MAAMC,SAEtBI,EAAgBJ,EAASK,KAAI,SAACC,EAA2BC,GAC7D,OAAwB,IAApBD,EAAG,SAEL,6BACE,yBACEE,MAAO,CAACC,OAAO,GAAGC,MAAM,GAAGC,aAAa,GAAGC,gBAAgBN,EAAG,MAAUO,QAAQ,eAAeC,OAAO,WACtGC,QAAS,kBAAM,EAAKC,UAAUhB,EAAUO,MAE1C,yBAAKC,MAAO,CAACK,QAAQ,eAAgBI,YAAY,KAC9CX,EAAG,OAON,6BACE,yBACEE,MAAO,CAACC,OAAO,GAAGC,MAAM,GAAGC,aAAa,GAAGC,gBAAgB,YAAYC,QAAQ,gBAC/EE,QAAS,kBAAM,EAAKC,UAAUhB,EAAUO,MAE1C,yBAAKC,MAAO,CAACK,QAAQ,eAAgBI,YAAY,KAC9CX,EAAG,UAUNY,EAAU,EAAKjB,MAAfiB,MACJC,EAAe,OACfC,EAAuB,OACtBF,IACHC,EAAeD,EAAMC,aACrBC,EAAuBF,EAAMG,0BAG/B,IAAMC,EAAc,CAACb,OAAO,GAAIG,gBAAiBO,EAAaI,WAAW,GAAGC,KAAK,EAAEV,OAAO,WAE1F,OACE,yBAAKN,MAAO,CAACE,MAAM,IAAKe,OAAO,EAAGC,QAAQ,EAAEd,gBAAgBQ,EAAqBT,aAAa,KAC5F,yBAAKH,MAAO,CAACC,OAAO,IAAIkB,UAAU,SAAShB,aAAa,GAAIM,YAAY,KACrEb,GAEH,yBAAKI,MAAO,CAACoB,cAAc,MAAOf,QAAQ,SACxC,yBAAKL,MAAK,2BAAMc,GAAN,IAAkBO,oBAAoB,GAAIC,YAAY,IAAIf,QAAS,kBAAM,EAAKgB,UAAS,KAC/F,uBAAGvB,MAAO,CAACwB,SAAS,GAAGC,UAAU,WAAjC,iBAEF,yBAAKzB,MAAK,2BAAMc,GAAN,IAAkBY,qBAAqB,GAAIC,WAAW,IAAIpB,QAAS,kBAAM,EAAKgB,UAAS,KAC/F,uBAAGvB,MAAO,CAACwB,SAAS,GAAGC,UAAU,WAAjC,gBAGJ,yBAAKzB,MAAK,2BAAMc,GAAN,IAAkBc,wBAAwB,GAAGC,uBAAuB,GAAIC,UAAU,IAAIvB,QAAS,kBAAM,EAAKwB,SAASvC,KAC3H,uBAAGQ,MAAO,CAACS,YAAY,GAAGe,SAAS,GAAGC,UAAU,WAAhD,a,EAOAjB,UAAY,SAAChB,EAAeO,GAGlCP,EAASO,GAAT,UAA+BP,EAASO,GAAT,SAC/B,EAAKiC,SAAS,CAACxC,SAAUA,IACzB,EAAKyC,e,EAGCF,SAAW,SAACvC,GAClB0C,IAAUC,kBAAkB3C,GAC5B,EAAKyC,e,EAGCV,SAAW,SAACa,GAClB,EAAK7C,MAAMC,SAAS6C,SAAQ,SAACvC,GAC3BA,EAAG,SAAesC,KAEpB,EAAKH,e,yBA1FoBK,KAoGdC,cAAwBjD,GC3GvCkD,IAAS7C,OACP,kBAAC,IAAM8C,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.58d46106.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode,  } from \"react\"\n\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\nclass FamilySelector extends StreamlitComponentBase {\n\n  public state = {familias: this.props.args[\"familias\"]}\n\n  public render = (): ReactNode => {\n    // Arguments that are passed to the plugin in Python are accessible\n    // via `this.props.args`. Here, we access the \"name\" arg.\n\n    const familias = this.state.familias\n\n    const familias_disp = familias.map((fam: { [x: string]: any }, index: number) => {\n      if (fam[\"selected\"] === true) {\n        return (\n        <div>\n          <div \n            style={{height:12,width:12,borderRadius:15,backgroundColor:fam[\"color\"],display:\"inline-block\",cursor:'pointer'}}\n            onClick={() => this.onClicked(familias, index)} >\n          </div>\n          <div style={{display:\"inline-block\", paddingLeft:10}}>\n            {fam[\"name\"]}\n          </div>\n        </div>\n        )\n      }\n      else {\n        return (\n          <div>\n            <div \n              style={{height:12,width:12,borderRadius:15,backgroundColor:\"lightgray\",display:\"inline-block\",}}\n              onClick={() => this.onClicked(familias, index)} >\n            </div>\n            <div style={{display:\"inline-block\", paddingLeft:10}}>\n              {fam[\"name\"]}\n            </div>\n          </div>\n        )\n      }\n    }\n\n      \n    );\n\n    const { theme } = this.props\n    var primaryColor = \"blue\"\n    var themeBackgroundColor = \"blue\"\n     if (theme) {\n      primaryColor = theme.primaryColor\n      themeBackgroundColor = theme.secondaryBackgroundColor\n     }\n\n    const styleButton = {height:40, backgroundColor: primaryColor,paddingTop:10,flex:1,cursor:'pointer'}\n\n    return (\n      <div style={{width:250, margin:0, padding:0,backgroundColor:themeBackgroundColor,borderRadius:12}}>\n        <div style={{height:300,overflowY:\"scroll\",borderRadius:10, paddingLeft:10,}}>\n          {familias_disp}\n        </div>\n        <div style={{flexDirection:'row', display:'flex'}}>\n          <div style={{...styleButton,borderTopLeftRadius:10, marginRight:2}} onClick={() => this.onSelect(false)}>\n            <p style={{fontSize:15,textAlign:'center'}}>deselect all</p>\n          </div>\n          <div style={{...styleButton,borderTopRightRadius:10, marginLeft:2}} onClick={() => this.onSelect(true)}>\n            <p style={{fontSize:15,textAlign:'center'}}>select all</p>\n          </div>\n        </div>\n        <div style={{...styleButton,borderBottomRightRadius:10,borderBottomLeftRadius:10, marginTop:4}} onClick={() => this.onFilter(familias)}>\n          <p style={{paddingLeft:15,fontSize:15,textAlign:'center',}}>filter</p>\n        </div>\n      </div>\n    )\n  }\n\n  /** Click handler for our \"Click Me!\" button. */\n  private onClicked = (familias: any, index:number) => {\n    // Increment state.numClicks, and pass the new value back to\n    // Streamlit via `Streamlit.setComponentValue`.\n    familias[index][\"selected\"] = !familias[index][\"selected\"]\n    this.setState({familias: familias})\n    this.forceUpdate()\n  }\n\n  private onFilter = (familias: any) => {\n    Streamlit.setComponentValue(familias)\n    this.forceUpdate()\n  }\n\n  private onSelect = (bool: boolean) => {\n    this.state.familias.forEach((fam:any) => {\n      fam['selected'] = bool\n    });\n    this.forceUpdate()\n  }\n\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(FamilySelector)\n\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport FamilySelector from \"./FamilySelector\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <FamilySelector />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}