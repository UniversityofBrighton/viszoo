{"version":3,"sources":["FamiliaSelector.tsx","index.tsx"],"names":["FamiliaSelector","state","familias","props","args","render","familias_disp","map","fam","index","style","height","width","borderRadius","backgroundColor","display","onClick","onClicked","paddingLeft","theme","primaryColor","themeBackgroundColor","margin","padding","overflowY","paddingTop","alignContent","onFilter","fontSize","setState","forceUpdate","Streamlit","setComponentValue","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"iQAWMA,E,4MAEGC,MAAQ,CAACC,SAAU,EAAKC,MAAMC,KAAX,U,EAEnBC,OAAS,WAId,IAAMH,EAAW,EAAKD,MAAMC,SAEtBI,EAAgBJ,EAASK,KAAI,SAACC,EAA2BC,GAC7D,OAAwB,IAApBD,EAAG,SAEL,6BACE,yBACEE,MAAO,CAACC,OAAO,GAAGC,MAAM,GAAGC,aAAa,GAAGC,gBAAgBN,EAAG,MAAUO,QAAQ,gBAChFC,QAAS,kBAAM,EAAKC,UAAUf,EAAUO,MAE1C,yBAAKC,MAAO,CAACK,QAAQ,eAAgBG,YAAY,KAC9CV,EAAG,OAON,6BACE,yBACEE,MAAO,CAACC,OAAO,GAAGC,MAAM,GAAGC,aAAa,GAAGC,gBAAgB,YAAYC,QAAQ,gBAC/EC,QAAS,kBAAM,EAAKC,UAAUf,EAAUO,MAE1C,yBAAKC,MAAO,CAACK,QAAQ,eAAgBG,YAAY,KAC9CV,EAAG,UAUNW,EAAU,EAAKhB,MAAfgB,MACJC,EAAe,OACfC,EAAuB,OAM3B,OALKF,IACHC,EAAeD,EAAMC,aACrBC,EAAuBF,EAAML,iBAI7B,yBAAKJ,MAAO,CAACE,MAAM,IAAKU,OAAO,EAAGC,QAAQ,EAAET,gBAAgBO,EAAqBR,aAAa,KAC5F,yBAAKH,MAAO,CAACC,OAAO,IAAIa,UAAU,SAASX,aAAa,GAAIK,YAAY,KACrEZ,GAEH,yBAAKI,MAAO,CACVC,OAAO,GAAIG,gBAAiBM,EAAaP,aAAa,GAAIY,WAAW,GAAGC,aAAa,UACpFV,QAAS,kBAAM,EAAKW,SAASzB,KAC9B,uBAAGQ,MAAO,CAACQ,YAAY,GAAGU,SAAS,GAAGF,aAAa,WAAnD,a,EAOAT,UAAY,SAACf,EAAeO,GAGlCP,EAASO,GAAT,UAA+BP,EAASO,GAAT,SAC/B,EAAKoB,SAAS,CAAC3B,SAAUA,IACzB,EAAK4B,e,EAGCH,SAAW,SAACzB,GAClB6B,IAAUC,kBAAkB9B,GAC5B,EAAK4B,e,yBA3EqBG,KAqFfC,cAAwBlC,GC5FvCmC,IAAS9B,OACP,kBAAC,IAAM+B,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.c40308ad.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode,  } from \"react\"\n\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\nclass FamiliaSelector extends StreamlitComponentBase {\n\n  public state = {familias: this.props.args[\"familias\"]}\n\n  public render = (): ReactNode => {\n    // Arguments that are passed to the plugin in Python are accessible\n    // via `this.props.args`. Here, we access the \"name\" arg.\n\n    const familias = this.state.familias\n\n    const familias_disp = familias.map((fam: { [x: string]: any }, index: number) => {\n      if (fam[\"selected\"] === true) {\n        return (\n        <div>\n          <div \n            style={{height:12,width:12,borderRadius:15,backgroundColor:fam[\"color\"],display:\"inline-block\",}}\n            onClick={() => this.onClicked(familias, index)} >\n          </div>\n          <div style={{display:\"inline-block\", paddingLeft:10}}>\n            {fam[\"name\"]}\n          </div>\n        </div>\n        )\n      }\n      else {\n        return (\n          <div>\n            <div \n              style={{height:12,width:12,borderRadius:15,backgroundColor:\"lightgray\",display:\"inline-block\",}}\n              onClick={() => this.onClicked(familias, index)} >\n            </div>\n            <div style={{display:\"inline-block\", paddingLeft:10}}>\n              {fam[\"name\"]}\n            </div>\n          </div>\n        )\n      }\n    }\n\n      \n    );\n\n    const { theme } = this.props\n    var primaryColor = \"blue\"\n    var themeBackgroundColor = \"blue\"\n     if (theme) {\n      primaryColor = theme.primaryColor\n      themeBackgroundColor = theme.backgroundColor\n     }\n\n    return (\n      <div style={{width:250, margin:0, padding:0,backgroundColor:themeBackgroundColor,borderRadius:12}}>\n        <div style={{height:300,overflowY:\"scroll\",borderRadius:10, paddingLeft:10,}}>\n          {familias_disp}\n        </div>\n        <div style={{\n          height:40, backgroundColor: primaryColor,borderRadius:10, paddingTop:10,alignContent:'center',\n        }} onClick={() => this.onFilter(familias)}>\n          <p style={{paddingLeft:15,fontSize:15,alignContent:'center'}}>filter</p>\n        </div>\n      </div>\n    )\n  }\n\n  /** Click handler for our \"Click Me!\" button. */\n  private onClicked = (familias: any, index:number) => {\n    // Increment state.numClicks, and pass the new value back to\n    // Streamlit via `Streamlit.setComponentValue`.\n    familias[index][\"selected\"] = !familias[index][\"selected\"]\n    this.setState({familias: familias})\n    this.forceUpdate()\n  }\n\n  private onFilter = (familias: any) => {\n    Streamlit.setComponentValue(familias)\n    this.forceUpdate()\n  }\n\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(FamiliaSelector)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport FamiliaSelector from \"./FamiliaSelector\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <FamiliaSelector />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}